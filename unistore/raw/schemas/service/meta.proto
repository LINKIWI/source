syntax = "proto3";

package schemas.service;

option go_package = "lib.kevinlin.info/schemas/unistore/service";

import "schemas/common/backend.proto";

// HealthCheckRequest is the request definition for HealthCheck.
message HealthCheckRequest {}

// HealthCheckResponse is the response definition for HealthCheck.
message HealthCheckResponse {}

// InfoRequest is the request definition for Info.
message InfoRequest {}

// InfoResponse is the response definition for Info.
message InfoResponse {
  // Version is the server build version string.
  string version = 1;
  // Address is the address specification of the server gRPC listener.
  string address = 2;
  // Backend is a structured descriptor of the composite backend routing tree in use by the server,
  // based on the server configuration. It is structured as a Node with a backend name and zero or
  // more children, each of which contains an identifier and an associated constant value or a
  // recursively defined Node for another backend. The tree includes, at minimum, the backend
  // implementation(s) in use by the server for storage, but may also include middleware wrappers
  // when enabled in configuration.
  common.Node backend = 3;
}

// Meta provides metadata information about the server.
service Meta {
  // HealthCheck checks liveness of the server.
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  // Info retrieves server metadata information.
  rpc Info(InfoRequest) returns (InfoResponse);
}
